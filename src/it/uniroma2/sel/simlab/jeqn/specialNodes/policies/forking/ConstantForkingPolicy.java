/*
 * 	Copyright (C) 2005-2011 Department of Enteprise Engineering, University of Rome "Tor Vergata"
 *                              ( http://www.dii.uniroma2.it )
 *
 *      This file is part of jEQN and was developed at the Software Engineering Laboratory
 *      ( http://www.sel.uniroma2.it )
 *
 *      jEQN is free software: you can redistribute it and/or modify
 *      it under the terms of the GNU General Public License as published by
 *      the Free Software Foundation, either version 3 of the License, or
 *      (at your option) any later version.
 *
 *      jEQN is distributed in the hope that it will be useful,
 *      but WITHOUT ANY WARRANTY; without even the implied warranty of
 *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *      GNU General Public License for more details.
 *
 *      You should have received a copy of the GNU General Public License
 *      along with jEQN.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package it.uniroma2.sel.simlab.jeqn.specialNodes.policies.forking;

import it.uniroma2.sel.simlab.jeqn.policies.ImplicitButNotExplicitInputOnlyDependentPolicy;

/** Defines a forking policy that uses a constant number as policy decision
 *
 * @author Daniele Gianni
 */
public class ConstantForkingPolicy extends ImplicitButNotExplicitInputOnlyDependentPolicy<Integer, Integer>{
    
    /** 
     * Creates a new instance of ConstantSplittingPolicy
     * @param implicitInput {@code Integer} object used to determine the policy decision. 
     * In this policy it defines the number of users generated by a fork node.  
     */
    public ConstantForkingPolicy(final Integer implicitInput) {
        super(implicitInput);
    }

    /**
     * Gets the policy decision.
     * @return The {@code Integer} object that wraps the policy decision, that is the number of users to be generated by a fork node
     */
    public Integer getDecision() {
        return getImplicitInput();
    }
}
